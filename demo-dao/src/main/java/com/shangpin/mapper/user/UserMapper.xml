<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.mapper.user.UserMapper">
    <resultMap id="BaseResultMap" type="pojo.User">
        <id column="id" property="userId"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="created_time" property="createTime" jdbcType="DATE" />
    </resultMap>
    <!-- <resultMap id="BaseResultMap" type="com.shangpin.pojo.Excelpojo" >
         &lt;!&ndash;<id column="supplier_channel_id" property="supplierChannelId" jdbcType="VARCHAR" />
         <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
         <result column="supplier_no" property="supplierNo" jdbcType="VARCHAR" />
         <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
         <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
         <result column="channel" property="channel" jdbcType="VARCHAR" />
         <result column="job_name" property="jobName" jdbcType="VARCHAR" />
         <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
         <result column="job_class_name" property="jobClassName" jdbcType="VARCHAR" />
         <result column="trigger_name" property="triggerName" jdbcType="VARCHAR" />
         <result column="trigger_group" property="triggerGroup" jdbcType="VARCHAR" />
         <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
         <result column="is_open" property="isOpen" jdbcType="INTEGER" />
         <result column="retry_frequency" property="retryFrequency" jdbcType="INTEGER" />
         <result column="time_zone_id" property="timeZoneId" jdbcType="INTEGER" />
         <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
         <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />&ndash;&gt;
     </resultMap>-->
    <select id="findUser"  resultType="pojo.User">
        SELECT USER_NAME,PASSWORD,TEL FROM USER
    </select>
    <insert id="registUser" parameterType="pojo.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO USER (id,user_name,password,update_time,created_time,tel,channel,salt)
        values(#{userId},#{userName},#{passWord},now(),now(),#{tel},'PC',#{salt})
       <!-- <selectKey resultType="java.lang.Integer" keyProperty="id">
            CALL IDENTITY()
        </selectKey>-->
    </insert>
    <insert id="insertUserRole">
        INSERT INTO USER_ROLE(id,user_id,role_id) values (null,#{userId},1)
    </insert>
    <select id="login" parameterType="pojo.User" resultMap="BaseResultMap">
        SELECT * FROM USER WHERE user_name=#{userName} AND password=#{passWord}
    </select>
    <!--<sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        <if test="fields == null" >
            supplier_channel_id, supplier_id, supplier_no,supplier_name, channel, job_name, job_group, job_class_name,
            trigger_name, trigger_group, cron_expression,is_open, time_zone_id,retry_frequency, create_time, update_time
        </if>
        <if test="fields != null" >
            ${fields}
        </if>
    </sql>-->


</mapper>